#!/usr/bin/python3
import os.path
import sys
import urllib.request

from pwn import *
import json
import requests

global elf

# hackthebox_lib = '/home/sanjay/htb/pwn/libc6_2.23-0ubuntu9_amd64.symbols'
hackthebox_lib = 'https://libc.nullbyte.cat/d/libc6_2.27-3ubuntu1_amd64.symbols'
hackthebox_lib = 'https://libc.nullbyte.cat/d/libc6-amd64_2.27-3ubuntu1_i386.symbols'

if len(sys.argv) == 5:
    hackthebox_lib = sys.argv[4]

lib_file = hackthebox_lib.split('/')[-1]
curr_dir = os.getcwd()
lib_file_location = os.path.join(curr_dir, lib_file)

if not os.path.exists(lib_file):
    info(f'the lib_file: {lib_file} does not exists. Downloading it...')
    file_data = requests.get(hackthebox_lib).text
    open(lib_file_location, 'w').write(file_data)
    if os.path.exists(lib_file_location):
        success(f'lib_file: {lib_file} downloaded successfully')
    else:
        failure(f'error downloading lib_file: {lib_file}')

info(f'parsing lib: {lib_file}...')

symbols = open(lib_file, 'rb').read().decode()
symbols = symbols.splitlines()

symbols_offset = dict()

for symbol in symbols:

    name, offset = symbol.split()
    symbols_offset[name.strip()] = int(offset, 0x10)

system_offset = symbols_offset['system']
binsh_offset = symbols_offset['str_bin_sh']
printf_offset = symbols_offset['printf']
read_offset = symbols_offset['read']


def start(file_name=''):

    global elf
    elf = context.binary = ELF(file_name)

    if len(sys.argv) > 1:
        if sys.argv[1] == 'gdb':
            gdbscript = '''
            pwndbg-init
            continue
            '''
            return gdb.debug(file_name, gdbscript=gdbscript)
        else:
            host, port = sys.argv[2:4]
            return remote(host, int(port))
    return process(file_name)


def run_main():

    io = start()
    io.interactive()


if __name__ == '__main__':
    run_main()

